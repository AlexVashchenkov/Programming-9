let l =  [0;1;2;3;4;5;6;7;8;9];;

let a = [[0;1;1;1;0;0;0;0;0;0];
	 [0;0;0;1;0;0;0;0;0;0];
	 [0;0;0;1;0;0;0;0;0;0];
	 [0;0;0;0;1;1;1;0;0;0];
	 [0;0;0;0;0;0;1;0;0;0];
	 [0;0;0;0;0;0;1;0;0;0];
	 [0;0;0;0;0;0;0;1;1;1];
	 [0;0;0;0;0;0;0;0;0;1];
	 [0;0;0;0;0;0;0;0;0;1];
	 [0;0;0;0;0;0;0;0;0;0]];;

let rec get_elem a n = 
	match a with
 [] -> failwith""
|b :: c -> if n = 0 then b else (get_elem c (n-1));;

let rec all_inc a x = 
	match a with
 [] -> 0
|b :: c -> 
let rec find_number_of_ways a l = 
	